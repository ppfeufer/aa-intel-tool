"use strict";const fetchAjaxData=async url=>{return await fetch(url).then(response=>{if(response.ok){return Promise.resolve(response)}else{return Promise.reject(new Error("Failed to load"))}}).then(response=>response.json()).then(tableData=>{return tableData}).catch(function(error){console.log(`Error: ${error.message}`)})};jQuery(document).ready($=>{const elementCopyToClipboard=$("button#btn-copy-permalink-to-clipboard");if(!ClipboardJS.isSupported()){elementCopyToClipboard.remove()}const closeMessageElement=(element,closeAfter=10)=>{$(element).fadeTo(closeAfter*1e3,500).slideUp(500,elm=>{$(elm).slideUp(500,el=>{$(el).remove()})})};const showSuccess=(message,element)=>{$(element).html('<div class="alert alert-success alert-dismissable alert-message-success">'+'<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>'+message+"</div>");closeMessageElement(".alert-message-success")};const showError=(message,element)=>{$(element).html('<div class="alert alert-danger alert-dismissable alert-message-error">'+'<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>'+message+"</div>");closeMessageElement(".alert-message-error",9999)};const copyScanLink=elementId=>{const clipboardScanLink=new ClipboardJS(elementId);clipboardScanLink.on("success",e=>{showSuccess(aaIntelToolJsL10n.copyToClipboard.permalink.text.success,".aa-intel-copy-result");e.clearSelection();clipboardScanLink.destroy()});clipboardScanLink.on("error",()=>{showError(aaIntelToolJsL10n.copyToClipboard.permalink.text.error,".aa-intel-copy-result");clipboardScanLink.destroy()})};elementCopyToClipboard.click(()=>{copyScanLink("#"+elementCopyToClipboard.attr("id"))})});